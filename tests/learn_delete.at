AT_BANNER([learning delete action])

AT_SETUP([learning delete action - Delete all rules in a single table])
# Set up flow tables
OVS_VSWITCHD_START(
  [add-port br0 p1 -- set Interface p1 type=dummy ofport_request=1 -- \
   add-port br0 p2 -- set Interface p2 type=dummy ofport_request=2 -- \
   add-port br0 p3 -- set Interface p3 type=dummy ofport_request=3])

AT_DATA([flows.txt], [[
table=150 priority=10 actions=learn_delete(table=210)
table=210 priority=10 actions=note:00.00.00
table=210 priority=12 actions=note:00.00.01
]])
AT_CHECK([ovs-ofctl add-flows br0 flows.txt])

# Have a packet delete all rules in table 201
AT_CHECK([ovs-appctl ofproto/trace ovs-dummy "in_port(3),eth(src=11:22:33:44:55:66,dst=99:88:77:66:55:44)" -generate], [0], [stdout])
AT_CHECK([ovs-ofctl dump-flows br0 | ofctl_strip | sort], [0], [dnl
 table=150, priority=10 actions=learn_delete(table=210)
NXST_FLOW reply:
])
OVS_VSWITCHD_STOP
AT_CLEANUP

AT_SETUP([learning delete action - Delete using packet data])
# Set up flow tables
OVS_VSWITCHD_START(
  [add-port br0 p1 -- set Interface p1 type=dummy ofport_request=1 -- \
   add-port br0 p2 -- set Interface p2 type=dummy ofport_request=2 -- \
   add-port br0 p3 -- set Interface p3 type=dummy ofport_request=3])

AT_DATA([flows.txt], [[
table=150 priority=10 actions=learn_delete(table=210, priority=10, NXM_OF_ETH_DST[])
table=210 priority=10 dl_dst=11:22:11:22:11:22 actions=note:00.00.01
]])
AT_CHECK([ovs-ofctl add-flows br0 flows.txt])

# Have a packet delete all rules in table 201
flow = "in_port(3),eth(src=11:22:33:44:55:66,dst=11:22:11:22:11:22),eth_type(0x0800)"
AT_CHECK([ovs-appctl ofproto/trace ovs-dummy "in_port(3),eth(src=11:22:33:44:55:66,dst=11:22:11:22:11:22),eth_type(0x0800)" -generate], [0], [stdout])
AT_CHECK([ovs-ofctl dump-flows br0 | ofctl_strip | sort], [0], 
[[ table=150, priority=10 actions=learn_delete(table=210,priority=10,NXM_OF_ETH_DST[])
NXST_FLOW reply:
]])
OVS_VSWITCHD_STOP
AT_CLEANUP

AT_SETUP([learning delete action - Delete using rule table])
# Set up flow tables
OVS_VSWITCHD_START(
  [add-port br0 p1 -- set Interface p1 type=dummy ofport_request=1 -- \
   add-port br0 p2 -- set Interface p2 type=dummy ofport_request=2 -- \
   add-port br0 p3 -- set Interface p3 type=dummy ofport_request=3])

AT_DATA([flows.txt], [[
table=150, priority=5, dl_dst=99:88:77:66:55:44, actions=note:00.00.00
table=150, priority=10, actions=learn_delete(use_rule_table=1, priority=5, NXM_OF_ETH_DST[])
]])
AT_CHECK([ovs-ofctl add-flows br0 flows.txt])

AT_CHECK([ovs-appctl ofproto/trace ovs-dummy "in_port(3),eth(src=11:22:33:44:55:66,dst=99:88:77:66:55:44)" -generate], [0], [stdout])
AT_CHECK([ovs-ofctl dump-flows br0 | ofctl_strip | sort], [0], 
[[ table=150, priority=10 actions=learn_delete(table=1,priority=5,table_spec=DELETE_USING_RULE_TABLE,NXM_OF_ETH_DST[])
NXST_FLOW reply:
]])
OVS_VSWITCHD_STOP
AT_CLEANUP

AT_SETUP([learning delete action - Using atomic counter (INGRESS)])
# Set up flow tables
OVS_VSWITCHD_START(
  [add-port br0 p1 -- set Interface p1 type=dummy ofport_request=1 -- \
   add-port br0 p2 -- set Interface p2 type=dummy ofport_request=2 -- \
   add-port br0 p3 -- set Interface p3 type=dummy ofport_request=3])

AT_DATA([flows.txt], [[
table=0, priority=5, dl_dst=99:88:77:66:55:44, actions=note:00.00.00
table=150, priority=10, actions=learn_delete(use_atomic_table=INGRESS, priority=5, NXM_OF_ETH_DST[])
]])
AT_CHECK([ovs-ofctl add-flows br0 flows.txt])

AT_CHECK([ovs-appctl ofproto/trace ovs-dummy "in_port(3),eth(src=11:22:33:44:55:66,dst=99:88:77:66:55:44)" -generate], [0], [stdout])
AT_CHECK([ovs-ofctl dump-flows br0 | ofctl_strip | sort], [0], 
[[ table=150, priority=10 actions=learn_delete(table=1,priority=5,table_spec=DELETE_USING_INGRESS_ATOMIC_TABLE,NXM_OF_ETH_DST[]) 
NXST_FLOW reply:
]])
OVS_VSWITCHD_STOP
AT_CLEANUP

AT_SETUP([learning delete action - Using atomic counter (EGRESS)])
# Set up flow tables
OVS_VSWITCHD_START(
  [add-port br0 p1 -- set Interface p1 type=dummy ofport_request=1 -- \
   add-port br0 p2 -- set Interface p2 type=dummy ofport_request=2 -- \
   add-port br0 p3 -- set Interface p3 type=dummy ofport_request=3])

AT_DATA([flows.txt], [[
table=200, priority=5, dl_dst=99:88:77:66:55:44, actions=note:00.00.00
table=150, priority=10, actions=learn_delete(use_atomic_table=EGRESS, priority=5, NXM_OF_ETH_DST[])
]])
AT_CHECK([ovs-ofctl add-flows br0 flows.txt])

AT_CHECK([ovs-appctl ofproto/trace ovs-dummy "in_port(3),eth(src=11:22:33:44:55:66,dst=99:88:77:66:55:44)" -generate], [0], [stdout])
AT_CHECK([ovs-ofctl dump-flows br0 | ofctl_strip | sort], [0], [[ table=150, priority=10 actions=learn_delete(table=1,priority=5,table_spec=DELETE_USING_EGRESS_ATOMIC_TABLE,NXM_OF_ETH_DST[]) 
NXST_FLOW reply:
]])
OVS_VSWITCHD_STOP
AT_CLEANUP

AT_SETUP([learning delete action - Delete specific priority rule])
# Set up flow tables
OVS_VSWITCHD_START(
  [add-port br0 p1 -- set Interface p1 type=dummy ofport_request=1 -- \
   add-port br0 p2 -- set Interface p2 type=dummy ofport_request=2 -- \
   add-port br0 p3 -- set Interface p3 type=dummy ofport_request=3])

AT_DATA([flows.txt], [[
table=210, priority=10, actions=note:00.00.01
table=210, priority=12, actions=note:00.00.01
table=150, priority=10, actions=learn_delete(table=210, priority=10)
]])
AT_CHECK([ovs-ofctl add-flows br0 flows.txt])

AT_CHECK([ovs-appctl ofproto/trace ovs-dummy "in_port(3),eth(src=11:22:33:44:55:66,dst=99:88:77:66:55:44)" -generate], [0], [stdout])
AT_CHECK([ovs-ofctl dump-flows br0 | ofctl_strip | sort], [0],
[[ table=150, priority=10 actions=learn_delete(table=210,priority=10)
 table=210, priority=12 actions=note:00.00.01.00.00.00
NXST_FLOW reply:
]])
OVS_VSWITCHD_STOP
AT_CLEANUP
